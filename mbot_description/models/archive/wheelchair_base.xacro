<?xml version="1.0"?>
<robot name="wheelchair_base" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- PROPERTY LIST -->
    <xacro:property name="M_PI" value="3.14159265358"/>
    <xacro:property name="base_mass"   value="4" />
    <xacro:property name="base_length" value="0.50"/>
    <xacro:property name="base_width" value="0.50"/>
    <xacro:property name="base_height" value="0.05"/>

    <xacro:property name="wheel_mass"   value="4" />
    <xacro:property name="wheel_radius" value="0.3"/>
    <xacro:property name="wheel_length" value="0.05"/>
    <xacro:property name="wheel_joint_x" value="0.15"/>
    <xacro:property name="wheel_joint_y" value="0.275"/>
    <xacro:property name="wheel_joint_z" value="0.3"/>

    <xacro:property name="backrest_mass"   value="2" />
    <xacro:property name="backrest_length"   value="0.05" />
    <xacro:property name="backrest_width"   value="0.5" />
    <xacro:property name="backrest_height"   value="0.5" />
    <xacro:property name="backrest_joint_x" value="0.275"/>
    <xacro:property name="backrest_joint_y" value="0"/>
    <xacro:property name="backrest_joint_z" value="0.725"/>

    <xacro:property name="legrest_mass"   value="2" />
    <xacro:property name="legrest_length"   value="0.3" />
    <xacro:property name="legrest_width"   value="0.5" />
    <xacro:property name="legrest_height"   value="0.05" />
    <xacro:property name="legrest_joint_x" value="0.34"/>
    <xacro:property name="legrest_joint_y" value="0"/>
    <xacro:property name="legrest_joint_z" value="0.4"/>

    <xacro:property name="armrest_mass"   value="1" />
    <xacro:property name="armrest_length"   value="0.4" />
    <xacro:property name="armrest_width"   value="0.05" />
    <xacro:property name="armrest_height"   value="0.2" />
    <xacro:property name="armrest_joint_x" value="0.05"/>
    <xacro:property name="armrest_joint_y" value="0.225"/>
    <xacro:property name="armrest_joint_z" value="0.625"/>

    <xacro:property name="casterholder_mass"   value="0.5" />
    <xacro:property name="casterholder_radius"   value="0.02" />
    <xacro:property name="casterholder_length"   value="0.3" />
    <xacro:property name="casterholder_joint_x" value="0.35"/>
    <xacro:property name="casterholder_joint_y" value="0.225"/>
    <xacro:property name="casterholder_joint_z" value="0.25"/>

    <xacro:property name="caster_mass" value="0.5"/>
    <xacro:property name="caster_radius" value="0.06"/>
    <xacro:property name="caster_joint_x" value="0"/>
    <xacro:property name="caster_joint_y" value="0"/>
    <xacro:property name="caster_joint_z" value="0.19"/>

    <!-- Defining the colors used in this wheelchair -->
    <material name="yellow">
        <color rgba="1 0.4 0 1"/>
    </material>
    <material name="black">
        <color rgba="0 0 0 0.95"/>
    </material>
    <material name="white">
        <color rgba="1 1 1 0.9"/>
    </material>
    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>
    <material name="blue">
        <color rgba="0 0 1 1"/>
    </material>

    <!-- Macro for inertia matrix -->
    <xacro:macro name="cuboid_inertial_matrix" params="m l w h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(h*h+w*w)/12}" ixy="0" ixz="0"
                iyy="${m*(l*l+h*h)/12}" iyz="0" 
                izz="${m*(w*w+l*l)/12}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                iyy="${2*m*r*r/5}" iyz="0" 
                izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                izz="${m*r*r/2}" /> 
        </inertial>
    </xacro:macro>

    <!-- Macro for wheel -->
    <xacro:macro name="wheel" params="prefix reflect">
        <joint name="${prefix}_wheel_joint" type="continuous">
            <origin xyz="${-wheel_joint_x} ${reflect*wheel_joint_y} ${wheel_joint_z}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_wheel_link"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
                <material name="white" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                <geometry>
                    <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                </geometry>
            </collision>
            <cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
        </link>

        <gazebo reference="${prefix}_wheel_link">
            <material>Gazebo/SkyBlue</material>
        </gazebo>

        <!-- Transmission is important to link the joints and the controller -->
        <transmission name="${prefix}_wheel_joint_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${prefix}_wheel_joint" >
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="${prefix}_wheel_joint_motor">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>


    <!-- Macro for backrest -->
    <xacro:macro name="backrest">
        <joint name="backrest_joint" type="fixed">
            <origin xyz="${-backrest_joint_x} ${backrest_joint_y} ${backrest_joint_z}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="backrest_link"/>
            <axis xyz="0 0 0"/>
        </joint>

        <link name="backrest_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size = "${backrest_length} ${backrest_width} ${backrest_height}"/>
                </geometry>
                <material name="yellow" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size = "${backrest_length} ${backrest_width} ${backrest_height}"/>
                </geometry>
            </collision>
            <cuboid_inertial_matrix  m="${backrest_mass}" l="${backrest_length}" w="${backrest_width}" h="${backrest_height}" />
        </link>

        <gazebo reference="backrest_link">
            <material>Gazebo/Yellow</material>
        </gazebo>
    </xacro:macro>

    <!-- Macro for legrest -->
    <xacro:macro name="legrest">
        <joint name="legrest_joint" type="fixed">
            <origin xyz="${legrest_joint_x} ${legrest_joint_y} ${legrest_joint_z}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="legrest_link"/>
            <axis xyz="0 0 0"/>
        </joint>

        <link name="legrest_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 ${M_PI/4} 0"/>
                <geometry>
                    <box size = "${legrest_length} ${legrest_width} ${legrest_height}"/>
                </geometry>
                <material name="yellow" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 ${M_PI/4} 0" />
                <geometry>
                    <box size = "${legrest_length} ${legrest_width} ${legrest_height}"/>
                </geometry>
            </collision>
            <cuboid_inertial_matrix  m="${legrest_mass}" l="${legrest_length}" w="${legrest_width}" h="${legrest_height}" />
        </link>

        <gazebo reference="legrest_link">
            <material>Gazebo/Yellow</material>
        </gazebo>
    </xacro:macro>

    <!-- Macro for armrest -->
    <xacro:macro name="armrest" params="prefix reflect">
        <joint name="${prefix}_armrest_joint" type="fixed">
            <origin xyz="${-armrest_joint_x} ${reflect*armrest_joint_y} ${armrest_joint_z}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_armrest_link"/>
            <axis xyz="0 0 0"/>
        </joint>

        <link name="${prefix}_armrest_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <box size = "${armrest_length} ${armrest_width} ${armrest_height}"/>
                </geometry>
                <material name="red" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size = "${armrest_length} ${armrest_width} ${armrest_height}"/>
                </geometry>
            </collision>
            <cuboid_inertial_matrix  m="${armrest_mass}" l="${armrest_length}" w="${armrest_width}" h="${armrest_height}" />
        </link>

        <gazebo reference="${prefix}_armrest_link">
            <material>Gazebo/Red</material>
        </gazebo>
    </xacro:macro>

    <!-- Macro for casterholder -->
    <xacro:macro name="casterholder" params="prefix reflect">
        <joint name="${prefix}_casterholder_joint" type="fixed">
            <origin xyz="${casterholder_joint_x} ${reflect*casterholder_joint_y} ${casterholder_joint_z}" rpy="0 0 0"/>
            <parent link="base_link"/>
            <child link="${prefix}_casterholder_link"/>
            <axis xyz="0 0 0"/>
        </joint>

        <link name="${prefix}_casterholder_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius = "${casterholder_radius}" length = "${casterholder_length}"/>
                </geometry>
                <material name="blue" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius = "${casterholder_radius}" length = "${casterholder_length}"/>
                </geometry>
            </collision>
            <cylinder_inertial_matrix  m="${casterholder_mass}" r="${casterholder_radius}" h="${casterholder_length}" />
        </link>

        <gazebo reference="${prefix}_casterholder_link">
            <material>Gazebo/Red</material>
        </gazebo>
    </xacro:macro>

    <!-- Macro for caster -->
    <xacro:macro name="caster" params="prefix">
        <joint name="${prefix}_caster_joint" type="continuous">
            <origin xyz="0 0 ${-caster_joint_z}" rpy="0 0 0"/>
            <parent link="${prefix}_casterholder_link"/>
            <child link="${prefix}_caster_link"/>
            <axis xyz="0 1 0"/>
        </joint>

        <link name="${prefix}_caster_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
                <material name="black" />
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <sphere radius="${caster_radius}" />
                </geometry>
            </collision>      
            <sphere_inertial_matrix  m="${caster_mass}" r="${caster_radius}" />
        </link>

        <gazebo reference="${prefix}_caster_link">
            <material>Gazebo/Black</material>
        </gazebo>
    </xacro:macro>

    <!-- Macro for wheelchair base -->
    <xacro:macro name="wheelchair_base">

        <link name="base_footprint">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <box size="0.001 0.001 0.001" />
                </geometry>
            </visual>
        </link>
        <gazebo reference="base_footprint">
            <turnGravityOff>false</turnGravityOff>
        </gazebo>

        <joint name="base_footprint_joint" type="fixed">
            <origin xyz="0 0 0.001" rpy="0 0 0" />        
            <parent link="base_footprint"/>
            <child link="base_link" />
        </joint>

        <link name="base_link">
            <visual>
                <origin xyz="0 0 0.5" rpy="0 0 0" />
                <geometry>
                    <box size = "${base_length} ${base_width} ${base_height}"/>
                </geometry>
                <material name="yellow" />
            </visual>
            <collision>
                <origin xyz="0 0 0.5" rpy="0 0 0" />
                <geometry>
                    <box size = "${base_length} ${base_width} ${base_height}"/>
                </geometry>
            </collision>
            <cuboid_inertial_matrix  m="${base_mass}" l="${base_length}" w="${armrest_width}" h="${base_height}" />
        </link>

        <gazebo reference="base_link">
            <material>Gazebo/Blue</material>
        </gazebo>

        <wheel prefix="left" reflect="-1"/>
        <wheel prefix="right" reflect="1"/>
 
        <backrest/>
        <legrest/>
        <armrest prefix="left" reflect="1"/>
        <armrest prefix="right" reflect="-1"/>

        <casterholder prefix="left" reflect="1"/>
        <casterholder prefix="right" reflect="-1"/>

        <caster prefix="left"/>
        <caster prefix="right"/>

        <!-- controller -->
        <gazebo>
            <plugin name="wheelchair_base_drive_controller" 
                    filename="libgazebo_ros_diff_drive.so">
                <rosDebugLevel>Debug</rosDebugLevel>
                <publishWheelTF>true</publishWheelTF>
                <robotNamespace>/</robotNamespace>
                <publishTf>1</publishTf>
                <publishWheelJointState>true</publishWheelJointState>
                <alwaysOn>true</alwaysOn>
                <updateRate>100.0</updateRate>
                <legacyMode>true</legacyMode>
                <leftJoint>left_wheel_joint</leftJoint>
                <rightJoint>right_wheel_joint</rightJoint>
                <wheelSeparation>${wheel_joint_y*2}</wheelSeparation>
                <wheelDiameter>${2*wheel_radius}</wheelDiameter>
                <broadcastTF>1</broadcastTF>
                <wheelTorque>30</wheelTorque>
                <wheelAcceleration>1.8</wheelAcceleration>
                <commandTopic>cmd_vel</commandTopic>
                <odometryFrame>odom</odometryFrame> 
                <odometryTopic>odom</odometryTopic> 
                <robotBaseFrame>base_footprint</robotBaseFrame>
            </plugin>
        </gazebo> 
    </xacro:macro>
</robot>
