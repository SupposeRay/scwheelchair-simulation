<launch>

    <!-- set parameters of launch file -->
    <arg name="world_name" value="$(find mbot_gazebo)/worlds/test_scenario.world"/>
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="false"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>

    <arg name="x" default="-11"/>
    <arg name="y" default="-4.8"/>
    <arg name="z" default="0"/>
    <arg name="roll" default="0"/>
    <arg name="pitch" default="0"/>
    <arg name="yaw" default="0"/>

    <!-- run gazebo simulation -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)" />
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <!-- load robot description -->
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find mbot_description)/models/mbot_xacro/mbox_with_laser_camera_gazebo.xacro'" /> 

    <!-- run joint_state_publisher node and publish robot joint state info  -->
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

    <!-- run robot_state_publisher node and publish tf  -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" args="$(arg use_sim_time)">
        <param name="publish_frequency" type="double" value="50.0" />
    </node>

    <!-- load robot model in gazebo -->
    <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
          args="-urdf -model mrobot -param robot_description"> 
    </node> -->
    <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
        args="-urdf -param robot_description -model mbot
              -x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

</launch>
