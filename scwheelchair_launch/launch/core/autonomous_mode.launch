<?xml version="1.0"?>
<!-- Launches the full robot framework, with shared control, autonomous navigation and a master node which can be used to switch. -->

<launch>
  <arg name="sim" default="false"/>   <!--determines whether to launch hardware drivers or not -->
  <arg name="map" default="rris.yaml" />
  <arg name="debug" default="true"/>   <!--prints debugging info if true -->

  <arg name="bot_params" default="scatwheel_params" />  
  <arg name="base_frame" default="base_footprint"/>
  <arg name="odom_frame" default="odom"/>
  <arg name="fixed_frame" default="map"/>

    <!-- hardware drivers launch when sim = false --> 
   <!--alternatively, set sim to 'true' and use the 'bare' simulation launch files  in mbot_navigation or scatwheel_navigation -->
    <include unless="$(arg sim)" file="$(find scwheelchair_launch)/launch/hardware_drivers.launch">
	  <arg name="base_frame" default="$(arg base_frame)"/>  
    </include>

    <!-- Localization pipeline -->
    <include file="$(find scwheelchair_launch)/launch/localization.launch">
	  <arg name="map" value="$(arg map)" />
	  <arg name="base_frame" value="$(arg base_frame)"/>  
	  <arg name="fixed_frame" value="$(arg fixed_frame)"/>  
    </include>

    <!-- Velocity command safety filter, filtering all commands for collision and vel/acc limits -->        
  <node pkg="vel_safety_filter" type="vel_safety_filter" name="vel_safety_filter" output="screen">
    <rosparam command="load" file="$(find vel_safety_filter)/config/settings.yaml" />    
    <rosparam command="load" file="$(find scwheelchair_launch)/config/$(arg bot_params).yaml" />
    <remap from="/odom" to="/ekf/odom" />
    <remap from="/obstacles" to="/scan_obstacles" />
    <param name="collision_method" value="footprint"/>
    <param name="base_frame" value="$(arg base_frame)"/>  
    <param name="fixed_frame" value="$(arg fixed_frame)"/>  
    <param name="obst_type" value="scan"/>
    <param name="use_vel_filter" value="true"/>
    <param name="use_acc_filter" value="true"/>
    <param name="use_col_filter" value="true"/>
    <param name="debug" value="$(arg debug)"/>
  </node>

    <!-- move_base node -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen" clear_params="true">
    <remap from="/odom" to="/ekf/odom"/>
    <remap from="/cmd_vel" to="/control/cmd_vel"/>
    <param name="base_global_planner" value="global_planner/GlobalPlanner" />    
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS" />
    <rosparam file="$(find scwheelchair_launch)/config/move_base_params.yaml" command="load" />
    <rosparam file="$(find scwheelchair_launch)/config/local_planner_params.yaml" command="load" />
    <rosparam file="$(find scwheelchair_launch)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find scwheelchair_launch)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find scwheelchair_launch)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find scwheelchair_launch)/config/global_costmap_params.yaml" command="load" />
    <param name="planner_frequency" value="1.0" />
  </node>

</launch>
